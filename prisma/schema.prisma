// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  name           String
  role           Role     @default(USER)
  profilePicture String?
  password       Password @relation(fields: [passwordId], references: [id], onDelete: Cascade)
  passwordId     String   @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  designs Design[] @relation("UserCreatedDesigns")
  orders  Order[]
}

model Password {
  id        String   @id @default(uuid())
  hashed    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?
}

model Fabric {
  id        String       @id @default(uuid())
  name      String
  type      String
  color     String
  imageUrl  String?
  source    FabricSource @default(PLATFORM)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  orders Order[]
}

model Design {
  id               String       @id @default(uuid())
  name             String
  description      String?
  imageUrl         String? // Original sketch
  renderedImageUrl String? // Rendered 3D
  status           DesignStatus @default(UPLOADED)
  createdBy        User         @relation("UserCreatedDesigns", fields: [createdById], references: [id])
  createdById      String
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt

  orders Order[]
}

model Order {
  id             String      @id @default(uuid())
  user           User        @relation(fields: [userId], references: [id])
  userId         String
  design         Design      @relation(fields: [designId], references: [id])
  designId       String
  fabric         Fabric      @relation(fields: [fabricId], references: [id])
  fabricId       String
  size           String
  quantity       Int
  notes          String?
  total          Float
  shippingDate   DateTime? // when the parcel leaves the studio
  trackingNumber String? // 3rd-party tracking code
  deliveryDate   DateTime? // confirmed delivered
  status         OrderStatus @default(PENDING)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum DesignStatus {
  UPLOADED // raw sketch
  RENDERING // in pipeline
  RENDERED // ready for ordering
}

enum FabricSource {
  PLATFORM
  USER_UPLOAD
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}
